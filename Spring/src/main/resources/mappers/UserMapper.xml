<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.kh.mapper.UserMapper">

    <!-- 사용자 등록 -->
    <insert id="insertUser" parameterType="kr.co.kh.vo.UserVO">
        INSERT INTO USERS (
            USER_ID,
            USER_PW,
            USER_NN,
            USER_EMAIL,
            USER_DEFLOC,
            USER_PHONENO,
            USER_STATUS,
            USER_SIGN_UP,
            USER_LAST_LOGIN,
            USER_PROFILE_IMAGE_URL,
            USER_POINT,
            USER_ACTIVE_POINT
        ) VALUES (
            #{userId},
            #{userPw},
            #{userNn},
            #{userEmail},
            #{userDefloc},
            #{userPhoneno},
            #{userStatus},
            SYSDATE,
            SYSDATE,
            #{userProfileImageUrl},
            #{userPoint},
            #{userActivePoint}
        )
    </insert>

    <!-- 사용자 조회 (아이디로) -->
    <select id="selectUserById" parameterType="String" resultType="kr.co.kh.vo.UserVO">
        SELECT 
            USER_ID,
            USER_PW,
            USER_NN,
            USER_EMAIL,
            USER_DEFLOC,
            USER_PHONENO,
            USER_STATUS,
            USER_SIGN_UP,
            USER_LAST_LOGIN,
            USER_PROFILE_IMAGE_URL,
            USER_POINT,
            USER_ACTIVE_POINT
        FROM USERS 
        WHERE USER_ID = #{userId}
    </select>

    <!-- 사용자 조회 (이메일로) -->
    <select id="selectUserByEmail" parameterType="String" resultType="kr.co.kh.vo.UserVO">
        SELECT 
            USER_ID,
            USER_PW,
            USER_NN,
            USER_EMAIL,
            USER_DEFLOC,
            USER_PHONENO,
            USER_STATUS,
            USER_SIGN_UP,
            USER_LAST_LOGIN,
            USER_PROFILE_IMAGE_URL,
            USER_POINT,
            USER_ACTIVE_POINT
        FROM USERS 
        WHERE USER_EMAIL = #{userEmail}
    </select>

    <!-- 사용자 목록 조회 -->
    <select id="selectUserList" resultType="kr.co.kh.vo.UserVO">
        SELECT 
            USER_ID,
            USER_PW,
            USER_NN,
            USER_EMAIL,
            USER_DEFLOC,
            USER_PHONENO,
            USER_STATUS,
            USER_SIGN_UP,
            USER_LAST_LOGIN,
            USER_PROFILE_IMAGE_URL,
            USER_POINT,
            USER_ACTIVE_POINT
        FROM USERS 
        ORDER BY USER_SIGN_UP DESC
    </select>

    <!-- 사용자 수정 -->
    <update id="updateUser" parameterType="kr.co.kh.vo.UserVO">
        UPDATE USERS SET
            USER_PW = #{userPw},
            USER_NN = #{userNn},
            USER_EMAIL = #{userEmail},
            USER_DEFLOC = #{userDefloc},
            USER_PHONENO = #{userPhoneno},
            USER_STATUS = #{userStatus},
            USER_PROFILE_IMAGE_URL = #{userProfileImageUrl},
            USER_POINT = #{userPoint},
            USER_ACTIVE_POINT = #{userActivePoint}
        WHERE USER_ID = #{userId}
    </update>

    <!-- 사용자 삭제 -->
    <delete id="deleteUser" parameterType="String">
        DELETE FROM USERS 
        WHERE USER_ID = #{userId}
    </delete>

    <!-- 아이디 중복 확인 -->
    <select id="existsByUserId" parameterType="String" resultType="boolean">
        SELECT CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END
        FROM USERS 
        WHERE USER_ID = #{userId}
    </select>

    <!-- 이메일 중복 확인 -->
    <select id="existsByUserEmail" parameterType="String" resultType="boolean">
        SELECT CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END
        FROM USERS 
        WHERE USER_EMAIL = #{userEmail}
    </select>

    <!-- 로그인 시도 횟수 업데이트 -->
    <update id="updateLoginAttempts" parameterType="map">
        UPDATE USERS SET
            USER_STATUS = #{attempts}
        WHERE USER_ID = #{userId}
    </update>

    <!-- 마지막 로그인 시간 업데이트 -->
    <update id="updateLastLoginTime" parameterType="String">
        UPDATE USERS SET
            USER_LAST_LOGIN = SYSDATE
        WHERE USER_ID = #{userId}
    </update>

</mapper> 
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.kh.mapper.UserMapper">

    <!-- 사용자 등록 -->
    <insert id="insertUser" parameterType="kr.co.kh.vo.UserVO">
        INSERT INTO USERS (
            USER_ID,
            USER_PW,
            USER_NN,
            USER_EMAIL,
            USER_PHONENO,
            USER_STATUS,
            USER_SIGN_UP,
            USER_LAST_LOGIN,
            USER_PROFILE_IMAGE_URL,
            USER_POINT,
            USER_ACTIVE_POINT,
            PROVIDER
        ) VALUES (
            #{userId,jdbcType=VARCHAR},
            #{userPw,jdbcType=VARCHAR},
            #{userNn,jdbcType=VARCHAR},
            #{userEmail,jdbcType=VARCHAR},
            #{userPhoneno,jdbcType=VARCHAR},
            #{userStatus,jdbcType=NUMERIC},
            SYSDATE,
            SYSDATE,
            #{userProfileImageUrl,jdbcType=VARCHAR},
            #{userPoint,jdbcType=NUMERIC},
            #{userActivePoint,jdbcType=NUMERIC},
            #{provider,jdbcType=VARCHAR}
        )
    </insert>

    <!-- 사용자 조회 (아이디로) -->
    <select id="selectUserById" parameterType="String" resultType="kr.co.kh.vo.UserVO">
        SELECT 
            USER_ID,
            USER_PW,
            USER_NN,
            USER_EMAIL,
            USER_PHONENO,
            USER_STATUS,
            USER_SIGN_UP,
            USER_LAST_LOGIN,
            USER_PROFILE_IMAGE_URL,
            USER_POINT,
            USER_ACTIVE_POINT,
            PROVIDER
        FROM USERS 
        WHERE USER_ID = #{userId,jdbcType=VARCHAR}
    </select>

    <!-- 사용자 조회 (이메일로) -->
    <select id="selectUserByEmail" parameterType="String" resultType="kr.co.kh.vo.UserVO">
        SELECT 
            USER_ID,
            USER_PW,
            USER_NN,
            USER_EMAIL,
            USER_PHONENO,
            USER_STATUS,
            USER_SIGN_UP,
            USER_LAST_LOGIN,
            USER_PROFILE_IMAGE_URL,
            USER_POINT,
            USER_ACTIVE_POINT,
            PROVIDER
        FROM USERS 
        WHERE USER_EMAIL = #{userEmail,jdbcType=VARCHAR}
    </select>

    <!-- 사용자 목록 조회 -->
    <select id="selectUserList" resultType="kr.co.kh.vo.UserVO">
        SELECT 
            USER_ID,
            USER_PW,
            USER_NN,
            USER_EMAIL,
            USER_PHONENO,
            USER_STATUS,
            USER_SIGN_UP,
            USER_LAST_LOGIN,
            USER_PROFILE_IMAGE_URL,
            USER_POINT,
            USER_ACTIVE_POINT,
            PROVIDER
        FROM USERS 
        ORDER BY USER_SIGN_UP DESC
    </select>

    <!-- 사용자 수정 -->
    <update id="updateUser" parameterType="kr.co.kh.vo.UserVO">
        UPDATE USERS SET
            USER_PW = #{userPw,jdbcType=VARCHAR},
            USER_NN = #{userNn,jdbcType=VARCHAR},
            USER_EMAIL = #{userEmail,jdbcType=VARCHAR},
            USER_PHONENO = #{userPhoneno,jdbcType=VARCHAR},
            USER_STATUS = #{userStatus,jdbcType=NUMERIC},
            USER_PROFILE_IMAGE_URL = #{userProfileImageUrl,jdbcType=VARCHAR},
            USER_POINT = #{userPoint,jdbcType=NUMERIC},
            USER_ACTIVE_POINT = #{userActivePoint,jdbcType=NUMERIC},
            PROVIDER = #{provider,jdbcType=VARCHAR}
        WHERE USER_ID = #{userId,jdbcType=VARCHAR}
    </update>

    <!-- 사용자 삭제 -->
    <delete id="deleteUser" parameterType="String">
        DELETE FROM USERS 
        WHERE USER_ID = #{userId,jdbcType=VARCHAR}
    </delete>

    <!-- 아이디 중복 확인 -->
    <select id="existsByUserId" parameterType="String" resultType="boolean">
        SELECT CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END
        FROM USERS 
        WHERE USER_ID = #{userId,jdbcType=VARCHAR}
    </select>

    <!-- 이메일 중복 확인 -->
    <select id="existsByUserEmail" parameterType="String" resultType="boolean">
        SELECT CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END
        FROM USERS 
        WHERE USER_EMAIL = #{userEmail,jdbcType=VARCHAR}
    </select>

    <!-- 로그인 시도 횟수 업데이트 -->
    <update id="updateLoginAttempts" parameterType="map">
        UPDATE USERS SET
            USER_STATUS = #{attempts,jdbcType=NUMERIC}
        WHERE USER_ID = #{userId,jdbcType=VARCHAR}
    </update>

    <!-- 마지막 로그인 시간 업데이트 -->
    <update id="updateLastLoginTime" parameterType="String">
        UPDATE USERS SET
            USER_LAST_LOGIN = SYSDATE
        WHERE USER_ID = #{userId,jdbcType=VARCHAR}
    </update>

    <!-- 프로필 이미지 URL 업데이트 -->
    <update id="updateProfileImageUrl" parameterType="map">
        UPDATE USERS SET
            USER_PROFILE_IMAGE_URL = #{imageUrl,jdbcType=VARCHAR}
        WHERE USER_ID = #{userId,jdbcType=VARCHAR}
    </update>

    <!-- 프로필 이미지 URL 조회 -->
    <select id="getProfileImageUrl" parameterType="String" resultType="map">
        SELECT USER_PROFILE_IMAGE_URL, PROVIDER
        FROM USERS 
        WHERE USER_ID = #{userId,jdbcType=VARCHAR}
    </select>

    <!-- 프로필 이미지 URL 저장 (새로운 URL 추가) -->
    <update id="saveProfileImageUrl" parameterType="map">
        UPDATE USERS SET
            USER_PROFILE_IMAGE_URL = #{imageUrl,jdbcType=VARCHAR}
        WHERE USER_ID = #{userId,jdbcType=VARCHAR}
    </update>

    <!-- 프로필 이미지 URL 업데이트 (기존 URL을 새로운 URL로 변경) -->
    <update id="updateProfileImageUrlFromOld" parameterType="map">
        UPDATE USERS SET
            USER_PROFILE_IMAGE_URL = #{newUrl,jdbcType=VARCHAR}
        WHERE USER_ID = #{userId,jdbcType=VARCHAR}
        AND USER_PROFILE_IMAGE_URL = #{oldUrl,jdbcType=VARCHAR}
    </update>

    <!-- 저장된 프로필 이미지 URL 목록 조회 -->
    <select id="getSavedProfileImageUrls" parameterType="String" resultType="String">
        SELECT USER_PROFILE_IMAGE_URL
        FROM USERS 
        WHERE USER_ID = #{userId,jdbcType=VARCHAR}
        AND USER_PROFILE_IMAGE_URL IS NOT NULL
        AND USER_PROFILE_IMAGE_URL != ''
    </select>

    <!-- 특정 프로필 이미지 URL 삭제 -->
    <update id="deleteProfileImageUrl" parameterType="map">
        UPDATE USERS SET
            USER_PROFILE_IMAGE_URL = NULL
        WHERE USER_ID = #{userId,jdbcType=VARCHAR}
        AND USER_PROFILE_IMAGE_URL = #{url,jdbcType=VARCHAR}
    </update>

</mapper> 